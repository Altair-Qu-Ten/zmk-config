/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#include "german-keymap.h"

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  TAB   |  Q  |  W  |  E  |  R  |  T  |   |  Y   |  U   |  I  |  O  |  P  |LBKT/ü |
// |BSPC/ESC|  A  |  S  |  D  |  F  |  G  |   |  H   |  J   |  K  |  L  | ;/ö |  '/ä  |
// | RCTRL  |  Z  |  X  |  C  |  V  |  B  |   |  N   |  M   |  ,  |  .  |  -  | LSHFT |
//                      | LWR | SPC | GUI |   | ENTR | RALT | RSE |
                        bindings = <
   &kp TAB      &kp Q &kp W &kp E  &kp R     &kp T    &kp Y     &kp U    &kp I     &kp O   &kp P     &kp LBKT
   &mt ESC BSPC &kp A &kp S &kp D  &kp F     &kp G    &kp H     &kp J    &kp K     &kp L   &kp SEMI  &kp SQT
   &kp RCTRL    &kp Z &kp X &kp C  &kp V     &kp B    &kp N     &kp M    &kp COMMA &kp DOT &kp SLASH &kp LSHFT
                            &mo 1  &kp SPACE &kp LGUI &kp ENTER &kp RALT &mo 2 
                        >;
                };

                lower_layer {
// -----------------------------------------------------------------------------------------
// | `|  1  |  2  |  3  |  4  |  5  |   | 6 |  7  |  8  |  9  | 0 | - |
// |  | BT1 | BT2 | BT3 | BT4 | BT5 |   |   |     |  UP |     |   |   |
// |  |     |     |BTCLR|     |     |   |   | LFT | DWN | RGT |   |   |
//                |     |     |     |   |   |     |     |
                        bindings = <
   &kp GRAVE  &kp N1       &kp N2       &kp N3       &kp N4       &kp N5       &kp N6 &kp N7   &kp N8   &kp N9    &kp N0 &kp MINUS
   &trans     &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &trans &trans   &kp UP   &trans    &trans &trans
   &trans     &trans       &trans       &bt BT_CLR   &trans       &trans       &trans &kp LEFT &kp DOWN &kp RIGHT &trans &trans
                          	        &trans       &trans       &trans       &trans &trans   &trans  
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// | F1  | F2  | F3  | F4  | F5  |  F6  |   | F7  | F8  |  F9 | F10 | F11 | F12 |
// |     |     |     | END | DEL |SYSREQ|   |HOME |PG_DN|PG_UP|     |     |     |
// |LCTRL|  `  |  *  |  #  |  ~  |   <  |   |  >  |  +  |  |  |  =  |  '  |     |
//                   |     |     |      |   |     |     |     |
                        bindings = <
   &kp F1    &kp F2    &kp F3          &kp F4          &kp F5          &kp F6               &kp F7          &kp F8            &kp F9           &kp F10          &kp F11  &kp F12
   &trans    &trans    &trans          &kp END         &kp DEL         &kp SYSREQ           &kp HOME        &kp PG_DN         &kp PG_UP        &trans           &trans   &trans
   &kp LCTRL &kp EQUAL &kp KP_MULTIPLY &kp NON_US_HASH &kp RA(DE_PLUS) &kp NON_US_BACKSLASH &kp LS(DE_LABK) &kp RIGHT_BRACKET &kp RA(DE_LABK)  &kp LS(NUMBER_0) &kp PIPE &trans
                                       &trans          &trans          &trans               &trans          &trans            &trans     
                        >;
                };

        };
        
};